module compact_array
    ! 1 attributes(global) subroutine compaction_copy
    ! 2 attributes(global) subroutine prepare_holes
    ! 3 attributes(global) subroutine compaction_inplace
    ! 4 attributes(global) subroutine prepare_neighbor
    ! 5 attributes(global) subroutine prepare_exit
    ! 6 attributes(global) subroutine connect_recv
    ! 7 attributes(global) subroutine scan_zone
    use cudafor
    use variable_list, only: zone_de


contains
!7--------------------------------------------------------------------
    attributes(global) subroutine scan_zone(nnx1,nny1,buff, &
                                            d_isValid,rank,t_rank)

        implicit none
        ! integer,intent(in):: zone(:,:)
        integer,intent(out):: d_isValid(:)
        integer,value:: nnx1,nny1,buff,rank,t_rank
        integer:: ii,i,j,temp,lock,length

            ii = (blockIdx%x - 1) * blockDim%x + threadIdx%x
            lock = 1
            length = (nnx1+2*buff)*(nny1+2*buff)
            ! this is the total length of zone array when it was transformed to 1D

            if(ii <= length) then
                if(mod(ii, nnx1 + 2*buff) == 0) then
                    j = ii/(nnx1 + 2*buff) - buff
                    i = nnx1 + buff
                else
                    j = ii/(nnx1 + 2*buff) - buff + 1
                    i = mod(ii,nnx1 + 2*buff) - buff
                end if
            end if

            if(ii <= t_rank) d_isValid(ii) = 0
            ! for this scan, we only have t_rank elements

            if(ii <= length) then
                if(zone_de(i,j) >= 0 .and. zone_de(i,j) /= rank) then
                    temp = atomicAdd(d_isValid(zone_de(i,j)+1),lock)
                end if
            end if

            if(ii <= t_rank .and. d_isValid(ii) > 0) d_isValid(ii) = 1

    end subroutine scan_zone

end module compact_array