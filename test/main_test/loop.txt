

    if(rank /= ppx*qqy)then
        open(10,file='Restart_before.'//trim(adjustl(ranknum)))
            write(10,'(8(i3,1x))') ix1, iy1, nnx1, nny1, ix2, iy2, nnx2, nny2
            write(10,'(19(f15.3,1x))') P(1,:)
        close(10)
    else
        open(10,file='Restart_before.'//trim(adjustl(ranknum)))
            write(10,'(10(11(i3,1x),/))') ((Zonet_new(i,j),i=-buff+1,nx+buff),j=-buff+1,ny+buff)
            write(10,*) grid
        close(10)
    endif
!--------------------------------------------------------------------
    if (np_ic == -1) then
        ! if np_ic = -1 then we read a restart file
        ! move restart here is due to we want to do the allocate of temp here which can keep
        ! a clear structure, and then we can read the necessary files such as Ind etc.
        ! But if we do allocate, it needs the subdomain dim etc., so we read restart info here.

        call read_restarts()
        ! this is in the subdomain_bound module, which is in the ecoslim_subdomain_bc file

        ! 1. read ix1 etc. on worker. specific files or in restarts with P
        ! 2. read zones on workers   ???? copy to cpu
        ! 3. read grid and Zonet_old on manager??? Zonet_new
        call alloc_arrays_temp()

        if(rank /= ppx*qqy)then
            open(10,file='Restart_after.'//trim(adjustl(ranknum)))
                write(10,'(8(i3,1x))') ix1, iy1, nnx1, nny1, ix2, iy2, nnx2, nny2
                write(10,'(19(f15.3,1x))') P(1,:)
                write(10,*) Zone_de
            close(10)
        else
            open(10,file='Restart_after.'//trim(adjustl(ranknum)))
                write(10,'(10(11(i3,1x),/))') ((Zonet_new(i,j),i=-buff+1,nx+buff),j=-buff+1,ny+buff)
                write(10,*) grid
            close(10)
        endif

        call read_Zone_de()
        if(rank /= ppx*qqy)then
            open(10,file='Restart_after2_Zone_de.'//trim(adjustl(ranknum)))
                write(10,*) Zone_de
            close(10)
        endif
    end if
!--------------------------------------------------------------------



do kk = outkk, pfnt
    if (rank /= ppx*qqy) then





        ! interior particles
        call particles_independent<<<ceiling(dble(N_inte)/tPB),tPB>>> ( &
            P_de,dz_de,out_age_de,out_mass_de,out_comp_de,out_np_de, &
            et_age_de,et_mass_de,et_comp_de,et_np_de, &
            xgmin,ygmin,zgmin,xgmax,ygmax,zgmax, &
            xmin1,ymin1,zmin1,xmax1,ymax1,zmax1, &
            dx,dy,pfdt,moldiff,denh2o,dtfrac,0,N_inte, &
            nind,ix1,iy1,nnx1,nny1,nz,reflect,rank)

        print *, rank, 'ok8'
    end if


    if (mod(kk,(pft2-pft1+1)) == 0)  then
        if(rank /= ppx*qqy) then
            call MPI_FILE_OPEN(MPI_COMM_SELF,restartf,MPI_MODE_WRONLY+MPI_MODE_CREATE, &
                            MPI_INFO_NULL,fh2,ierr)
            call MPI_FILE_WRITE(fh2,np_active,1,MPI_INTEGER,MPI_STATUS_IGNORE,ierr)
            call MPI_FILE_WRITE(fh2,pid,1,MPI_INTEGER,MPI_STATUS_IGNORE,ierr)
            call MPI_FILE_WRITE(fh2,P(1:np_active,1:nind*2+17),np_active*(nind*2+17), &
                                MPI_DOUBLE_PRECISION,MPI_STATUS_IGNORE,ierr)
            call MPI_FILE_CLOSE(fh2, ierr)

            open(17,file='topology_restart.'//trim(adjustl(ranknum)),FORM='unformatted',access='stream')
                write(17) ix1, iy1, nnx1, nny1, ix2, iy2, nnx2, nny2
            close(17)  ! Topology

            open(18,file='Zone_de_restart.'//trim(adjustl(ranknum)),FORM='unformatted',access='stream')
                write(18) Zone_de
            close(18)  ! Zone_de
        else
            ! grid and Zonet_new
            open(19,file='manager_grid_zonet_new',FORM='unformatted',access='stream')
                write(19) grid
                write(19) Zonet_new
            close(19)  ! manager
        end if
    end if

end do !! timesteps and cycles